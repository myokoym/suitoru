#!/usr/bin/env ruby

require "fileutils"
require "net/https"
require "uri"
require "date"

if ARGV.size < 3
  $stderr.puts("Error: arguments is not enough.")
  $stderr.puts("Usage: #{$0} DOMAIN PROJECT LIST [FROM]")
  exit(false)
end

domain = ARGV.shift
project = ARGV.shift
list = ARGV.shift
from = ARGV.shift || 2009

host_name = "http://#{domain}/"
base_path = "projects/#{project}/lists/archive/#{list}/"

now = Time.now
current_year = now.year
current_month = now.month

YEARS = from.upto(current_year).to_a

MONTHS = Date::MONTHNAMES[1..-1]

DATA_DIR = "data"

output_dir = File.join(DATA_DIR, "#{project}-#{list}")
FileUtils.mkdir_p(output_dir)

YEARS.reverse.product(MONTHS.reverse) do |pair|
  year, month = *pair
  basename = "#{year}-#{month}.txt"
  output_path = File.join(output_dir, basename)
  if File.exist?(output_path) &&
       (current_year != year || Date::MONTHNAMES[current_month] != month)
    $stderr.puts("#{basename} already exists.")
    next
  end

  if current_year == year &&
       (current_month < Date::MONTHNAMES.index(month))
    next
  end

  uri = URI.parse("#{host_name}#{base_path}#{basename}")
  res = nil
  5.times do
    http = Net::HTTP.new(uri.host, uri.port)
    http.use_ssl = (uri.scheme == 'https')
    res = http.start do |h|
      h.get(uri.request_uri)
    end

    case res
    when Net::HTTPSuccess
      break
    when Net::HTTPRedirection
      uri = URI.parse(res["Location"])
      next
    else
      break
    end
  end
  sleep 0.5 + rand
  unless res.is_a?(Net::HTTPSuccess)
    $stderr.puts("#{basename} is not found.")
    next
  end

  File.open(output_path, "w") do |input_file|
    euc_text = res.body
    input_file.write(euc_text.encode("UTF-8", "EUC-JP"))
    puts("#{output_path} is saved.")
  end
end
